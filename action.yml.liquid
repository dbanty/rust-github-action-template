name: {{project-name}}
description: {{description}}
author: {{authors}}
inputs:
  error:
    description: 'The error message to display, if any'
    required: false
    default: ''
  token:
    description: 'The GitHub token to use for downloading the action, defaults to workflow token'
    required: true
    default: {% raw %}${{ github.token }}{% endraw %}
outputs:
  error:
    description: 'The description of any error that occurred'
    value: {% raw %}${{ steps.run.outputs.error }}{%endraw%}

runs:
  using: 'composite'
  steps:
    - name: Set reusable variables
      shell: bash
      run: |
        echo "action_repo={{github_repo}}" >> $GITHUB_ENV
        echo "action_org={{github_org}}" >> $GITHUB_ENV
        echo "binary_name={{project-name}}" >> $GITHUB_ENV

    - name: Add binary extension
      shell: bash
      if: runner.os == 'Windows'
      run: {% raw %}echo "binary_name=${{ env.binary_name }}.exe" >> $GITHUB_ENV{% endraw %}

    - name: Get Action Version
      id: get_action_version
      shell: pwsh
      run: {% raw %}|
        $finalComponent = Split-Path -Leaf ${{ github.action_path }}
        if ($finalComponent -eq "${{ env.action_repo }}") {
          $version = ""
        } else {
          $version = $finalComponent
        }
        Write-Output "version=$version" >> $Env:GITHUB_OUTPUT{% endraw %}

    - name: Download Action
      shell: bash
      run: {% raw %}|
        gh release download ${{ steps.get_action_version.outputs.version }} --repo ${{ env.action_org }}/${{ env.action_repo }} --pattern '${{ runner.os }}.tgz'
        tar -xzf ${{ runner.os }}.tgz{% endraw %}
      env:
        GITHUB_TOKEN: {% raw %}${{ inputs.token }}{% endraw %}

    - name: Run Action
      shell: bash
      id: run
      run: {% raw %}./${{ runner.os }}/${{ env.binary_name }} "${{ inputs.error }}"{% endraw %}
